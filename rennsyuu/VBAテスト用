'Test用
'コード値変換やNULL値変換用の練習
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'memo 開発タブの挿入からボタン作成

Sub main()
Dim i As Integer
Dim Menu As Worksheet
Dim nsheet As String
i = 2
    
'-While (Worksheets("ボタン作成用").Cells(i, 2) <> "")
'-    Select Case Worksheets("ボタン作成用").Cells(i, 2)
'+
'worksheetオブジェクトも変数に保存できる


Set Menu = Worksheets("ボタン作成用")

'20155012 作成シート名を、ボタン作成用シートのI2セルに入力した任意のシート名にする
'I2セルの作成シート名とこれから編集するシート名を一致させる必要あり
nsheet = Menu.Cells(2, 9)
Call createsheet(nsheet)
While (Menu.Cells(i, 2) <> "")
    Select Case Menu.Cells(i, 2)
        '各カラムに応じて呼び出す関数を変える
        Case "カラムA"
            Call func_c(i)
            Call func_a(i)
        Case "カラムB"
            'Call func_c(i)
            Call func_b(i)
        Case "カラムC"
            'Call func_c(i)
            Call func_a(i)
        End Select
        i = i + 1
Wend
End Sub

Sub func_a(i As Integer)
    'コード変換のいらない列かつブランクにはNULLを入れる列の処理
    sheetname = Worksheets("ボタン作成用").Cells(i, 1)
    start_record = Worksheets("ボタン作成用").Cells(i, 3)
    end_record = Worksheets("ボタン作成用").Cells(i, 4)
    retu = Worksheets("ボタン作成用").Cells(i, 5)
    'あらかじめ手でexcelに入力した列のアルファベットを、列番号に変換
    retu_num = Range(retu & "1").Column
    
    k = start_record
    
    '対象のデータに応じてここで列や文字内容の制約チェックもできれば行いたい
    '例えば文字数チェックとか
    
    
    While (k < end_record + 1)
        col_val = Worksheets(sheetname).Cells(k, retu_num)
        If col_val = vbNullString Then
            Worksheets(sheetname).Cells(k, retu_num).Value = "NULL"
        End If
        k = k + 1
    Wend
   End Sub

Sub func_b(i As Integer)
    'コード変換が必要な列の処理
    sheetname = Worksheets("ボタン作成用").Cells(i, 1)
    start_record = Worksheets("ボタン作成用").Cells(i, 3)
    end_record = Worksheets("ボタン作成用").Cells(i, 4)
    retu = Worksheets("ボタン作成用").Cells(i, 5)
    'あらかじめ手でexcelに入力した列のアルファベットを、列番号に変換
    retu_num = Range(retu & "1").Column
    
    k = start_record
    
    '対象のデータに応じてここで列や文字内容の制約チェックもできれば行いたい
    'こっちはコード変換できる内容かどうかのチェックが欲しい
    
    
    While (k < end_record + 1)
        col_val = Worksheets(sheetname).Cells(k, retu_num)
        If col_val = "郵送" Then
            Worksheets(sheetname).Cells(k, retu_num).Value = "1"
        ElseIf col_val = "fax" Then
            Worksheets(sheetname).Cells(k, retu_num).Value = "2"
        Else
            Worksheets(sheetname).Cells(k, retu_num).Value = "not defined"
        End If
        k = k + 1
    Wend
End Sub

Sub func_c(i As Integer)
    '特定の文字数及び、外字(また今度)をチェックする処理
    Set Menu = Worksheets("ボタン作成用")
    sheetname = Menu.Cells(i, 1)
    start_record = Menu.Cells(i, 3)
    end_record = Menu.Cells(i, 4)
    retu = Menu.Cells(i, 5)
    retu_num = Range(retu & "1").Column
    '任意の指定文字数かチェック
    limit_len = Menu.Cells(i, 6)
    
    k = start_record
    '対象の件数も同時にチェックする
    Dim l As Integer
    l = 0
    count_not_zenkaku = 0
    '文字数チェック
    While (k < end_record + 1)
        col_val = Worksheets(sheetname).Cells(k, retu_num)
        If LenB(col_val) > limit_len Then
            Worksheets(sheetname).Cells(k, retu_num).Font.ColorIndex = 5
            l = l + 1
        End If
        
    '20150513 全角のみの制約列で、全角以外が存在する場合、該当文字のみ色付け
        Dim tmpmozi As String
    'セル内の文字数を数えて文字数分だけループ処理
        Dim count As Integer
         count = Len(col_val)
         m = 1
    'セル内の文字一つずつチェック
        While (m < count + 1)
            tmpmozi = Mid(col_val, m, 1)
            len_mozi = Len(tmpmozi)
            lenb_mozi = LenB(StrConv(tmpmozi, vbFromUnicode))
            If len_mozi = lenb_mozi Then
            'tmpnum = InStr(1, col_val, tmpmozi, vbTextCompare)
            'If tmpnum = 0 Or tmpmozi = "" Or tmpmozi = Null Then
            '半角
                Worksheets(sheetname).Cells(k, retu_num).Characters(m, 1).Font.ColorIndex = 3
                count_not_zenkaku = count_not_zenkaku + 1
            End If
    'Debug.Print (tmpmozi)
    'MsgBox (tmpmozi)
        m = m + 1
        Wend
    '↓これ忘れると延々と処理終わらない、while書いたら忘れないよう最初に書く
        k = k + 1
    Wend
    Menu.Cells(i, 7) = l & "件"
    Menu.Cells(i, 8) = count_not_zenkaku & "個"
End Sub

Sub createsheet(nsheet As String)
'20150510　原本は触りたくないため、ボタン押下してシートを追加⇒追加先にコピー⇒コピー先を編集
'20150512　コピー先を編集はよくわからないため、コピー先を原本として、コピー元を編集
    Dim tmpname As String
    Dim dummysheet As Worksheet
    tmpname = " (2)"
    Set dummysheet = Worksheets.Add() '①
    Worksheets(nsheet).Copy After:=dummysheet '②
    'なぜか①がないと②でエラーに⇒余分なシートが追加されてしまう
    '同名シートをコピーすると、エラーメッセージが出て、シーケンス番号付与「sheet(2)とか」されてスキップ
    On Error Resume Next
    tmp = nsheet & tmpname
    Worksheets(tmp).Name = "原本"


End Sub



Sub hankakucheck()
'半角のみの制約列で、半角以外が存在する場合、該当文字のみ色付け
End Sub

Sub hankakukana()
'半角カナのみの制約列で、半角カナ以外が存在する場合、該当文字のみ色付け
End Sub

Sub gaizicheck()
'外字を16進数に変換して、セルとセル内の該当文字のみ色付け

End Sub
